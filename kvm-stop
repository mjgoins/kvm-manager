#!/bin/bash
#
# kvm-stop: send powerdown command to qemu socket.
#
# usage: kvm-stop <guest>
#
# kvm-stop gathers variables from /etc/kvm-manager/<guest>/env to figure out
# the owner and path to the guest monitor socket. Then it sends the socket
# a shutdown command so it can cleanly stop the guest. It waits until it is no
# longer possible to connect to the socket before returning.
#
# kvm-stop is intended to be run as the ExecStop command of a systemd service
# file. kvm-stop waits until the guest is completely down to prevent systemd
# from killing the process prior to a clean shutdown.
#
# Author: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
# Date: 2011-01-26
# License: GPL v3+

# Pull in environment variables for this guest from /etc/kvm-manager/$1/env.
KVM_DIR=$(dirname $(readlink -f "$0"))
source "${KVM_DIR}/kvm-common" "$1"

OWNERHOME=$(getent passwd "$OWNER" | cut -f6 -d: )
CONSOLENAME="$OWNERHOME/vms/$VMNAME/console.socket"

printf "Gracefully shutting down guest.\n"

# Don't let go until the guest is down (or systemd kills us).
while [ 1 ]; do
  printf 'system_powerdown\nquit' | socat STDIO "$OWNERHOME/vms/$VMNAME/monitor.socket"

  # When we can no longer connect to the socket, then we exit.
  printf 'info' | socat STDIO "$OWNERHOME/vms/$VMNAME/monitor.socket" 1>/dev/null 2>/dev/null || exit 0

  # If we can continue connecting to the socket, sleep for a second and then try again.
  sleep 1
done


